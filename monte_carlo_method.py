# -*- coding: utf-8 -*-
"""monte carlo final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NFsOk9EvTkVjZFXrKNCxQoiUmv2bGYGg
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt
import random
import numpy as np

a = 2
b = 6
c = 5
in_area = 0

def f(x):
  return np.sin(x)

for x in range(1,10000,1):
  x = random.uniform(a,b+1)
  y = random.uniform(0,c+1)

  if y <= f(x):
    in_area = in_area+1
  
print("Number of point in range: ", in_area)

x = np.linspace(0.15,3,1000)

plt.plot(x,f(x))
plt.title('$Monte Carlo Graph$')
plt.xlabel('$x$')
plt.ylabel('$f(x)$')
plt.axhline(color = 'black')
plt.axvline(color = 'black')